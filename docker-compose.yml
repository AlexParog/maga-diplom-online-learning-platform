version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: maga-diplom
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Сервис пользователей
  user-service:
    build:
      context: .
      dockerfile: ./maga-user-service/Dockerfile
    ports:
      - "8091:8091"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/maga-diplom
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Сервис курсов
  course-service:
    build:
      context: .
      dockerfile: ./maga-course-service/Dockerfile
    ports:
      - "8092:8092"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/maga-diplom
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SERVICES_USER_SERVICE_URL: http://user-service:8091
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Сервис тестов
  test-service:
    build:
      context: .
      dockerfile: ./maga-test-service/Dockerfile
    ports:
      - "8093:8093"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/maga-diplom
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SERVICES_USER_SERVICE_URL: http://user-service:8091
      SERVICES_COURSE_SERVICE_URL: http://course-service:8092
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
      course-service:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Сервис прохождения тестов
  submission-service:
    build:
      context: .
      dockerfile: ./maga-submission-service/Dockerfile
    ports:
      - "8094:8094"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/maga-diplom
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SERVICES_USER_SERVICE_URL: http://user-service:8091
      SERVICES_COURSE_SERVICE_URL: http://course-service:8092
      SERVICES_TEST_SERVICE_URL: http://test-service:8093
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
      course-service:
        condition: service_started
      test-service:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Prometheus для мониторинга метрик
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - user-service
      - course-service
      - test-service
      - submission-service

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres-data:
  prometheus-data:
  grafana-data: